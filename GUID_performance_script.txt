---
title: "GUIDPerformanceTest"
author: "DarthVidarr"
date: "11/06/2021"
output: html_document
---

```{r setup, include=FALSE}

library(tidyverse)
library(stringr)

#################################################################################################

###########################################
#     Setting up sample data              #
###########################################

Asset_Class_Type <- c("Cash","Fixed income","Equity","Property","Infrastructure","Commodities","Other")
Asset_domicile_type <- c("Australia domicile","International domicile","Not applicable")
Asset_listing_type <- c("Listed", "Unlisted", "Not applicable")
Fixed_income_type <- c("Government debt","Non Government debt","Mortgage debt","Credit","Not applicable")
Fixed_income_term <- c("Short term", "Long term", "Not applicable")
Fixed_income_currency_type <- c("Australian dollars", "Other currency", "Not applicable")
Mortgage_type <- c("Residential mortgage", "Commercial mortgage", "Not applicable")
International_economy_type <- c("Emerging market", "Developed markets", "Not applicable")

####Adding more dimensionality to emphasise difference in querying speeds

Dimensionalising_More <- c("A", "B", "C", "D", "E", "F", "G", "H", "I", "J")
Dimensionalising_More2 <- c("Z", "Y", "X", "W", "V", "U", "T", "S", "R", "Q")

df <- crossing(
  Asset_Class_Type
  ,Asset_domicile_type
  ,Asset_listing_type
  ,Fixed_income_type
  ,Fixed_income_term
  ,Fixed_income_currency_type
  ,Mortgage_type
  ,International_economy_type
  ,Dimensionalising_More
  ,Dimensionalising_More2)

colnames(df) <- paste0('tag_', colnames(df))

df <- transform(df, d1 = match(tag_Asset_Class_Type,Asset_Class_Type))
df <- transform(df, d2 = match(tag_Asset_domicile_type,Asset_domicile_type))
df <- transform(df, d3 = match(tag_Asset_listing_type,Asset_listing_type))
df <- transform(df, d4 = match(tag_Fixed_income_type,Fixed_income_type))
df <- transform(df, d5 = match(tag_Fixed_income_term,Fixed_income_term))
df <- transform(df, d6 = match(tag_Fixed_income_currency_type,Fixed_income_currency_type))
df <- transform(df, d7 = match(tag_Mortgage_type,Mortgage_type))
df <- transform(df, d8 = match(tag_International_economy_type,International_economy_type))
df <- transform(df, d9 = match(tag_Dimensionalising_More,Dimensionalising_More))
df <- transform(df, d10 = match(tag_Dimensionalising_More2,Dimensionalising_More2))
#################################################################################################
#################################################################################################

###########################################
#    Create numeric serial number         #
###########################################

df <- df %>% unite('Serial_No', c(d1, d2, d3, d4, d5, d6, d7, d8, d9, d10), na.rm = T, sep = "")

###########################################
#    Create alphanumeric serial number    #
###########################################

df$Serial_Chr <- as.character(df$Serial_No)
df$Serial_Chr <- str_replace_all(df$Serial_Chr,"2","B")

###########################################
#    Create character text ID             #
###########################################


df <- df %>% unite('Character_ID', contains("tag"), remove = F, na.rm = T, sep = "")

###########################################
# Create character text ID of same length #
###########################################


df$Character_ID_SameLength <- as.character(df$Serial_No)
df$Character_ID_SameLength <- str_replace_all(df$Serial_Chr,c("1" = "A", "2" = "B", "3" = "C", "4" = "D", "5" = "E", "6" = "F", "7" = "G", "8" = "H", "9" = "I", "0" = "J"))

#################################################################################################

###################################
# Serial number
###################################

List_Serial_No_grepl <- list()
for(i in 1:1000)
{

t0 <- Sys.time()
df2 <- subset(df, grepl(1114, Serial_No))
t1 <- Sys.time() - t0
List_Serial_No_grepl[i] <- t1
}

###################################
# Alphanumeric
###################################
List_Serial_Chr_grepl <- list()
for(i in 1:1000)
{

t0 <- Sys.time()
df2 <- subset(df, grepl("1114", Serial_Chr))
t1 <- Sys.time() - t0
List_Serial_Chr_grepl[i] <- t1
}

###################################
# Character ID
###################################

List_Character_ID_grepl <- list()
for(i in 1:1000)
{
t0 <- Sys.time()
df4 <- subset(df, grepl("CashAustralia domicileListedCredit", Character_ID))
t3 <- Sys.time() - t0
List_Character_ID_grepl[i] <- t3
}

##########################################
# Character ID (same length)
##########################################

List_Character_ID_SameLength <- list()
for(i in 1:1000)
{

t0 <- Sys.time()
df2 <- subset(df, grepl("AAAC", Character_ID_SameLength))
t1 <- Sys.time() - t0
List_Character_ID_SameLength[i] <- t1
}



Performance <- do.call(rbind, Map(data.frame, 
                                  Serial_No_grepl = List_Serial_No_grepl,
                                  Serial_Chr_grepl = List_Serial_Chr_grepl,
                                  Character_ID_grepl = List_Character_ID_grepl,
                                  Character_ID_SameLength = List_Character_ID_SameLength))


write.csv(Performance,"(...)\\TaxonomyPerformanceTest.csv")

```
